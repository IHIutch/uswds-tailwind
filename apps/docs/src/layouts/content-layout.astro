---
import Footer from "#components/footer.astro";
import { getCollection } from "astro:content";

const { pathname } = Astro.url;

const components = await getCollection(
  "components",
  (entry) => entry.data.isPublished !== false,
);
const allComponents = components.sort((a, b) =>
  a.data.title.localeCompare(b.data.title),
);
---

<div class="relative h-full min-h-0 flex">
  <div class="hidden desktop:block w-64 absolute inset-y-0 left-0 top-0 h-full">
    <nav
      aria-label="Side navigation"
      class="px-4 pt-12 pb-16 h-full overflow-y-auto"
      id="sidenav"
    >
      <div class="mb-3 flex items-center pl-4">
        <span class="font-bold text-lg">Components</span>
      </div>
      <ul
        class="divide-y divide-gray-10 [&_a]:pl-4 [&_ul_a]:pl-8 [&_ul_ul_a]:pl-12"
      >
        {
          allComponents.map((comps) => (
            <li>
              <a
                href={`/components/${comps.id}`}
                class="block relative py-2 px-4 text-gray-60 hover:text-blue-60v hover:bg-gray-5 focus:outline focus:outline-4 focus:outline-offset-0 focus:outline-blue-40v aria-[current=page]:text-blue-60v aria-[current=page]:font-bold aria-[current=page]:after:block aria-[current=page]:after:absolute aria-[current=page]:after:bg-blue-60v aria-[current=page]:after:inset-y-1 aria-[current=page]:after:left-0 aria-[current=page]:after:w-1 aria-[current=page]:after:rounded-full"
                aria-current={
                  pathname === `/components/${comps.id}` ? "page" : false
                }
              >
                {comps.data.title}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
  </div>
  <div class="desktop:pl-64 desktop-lg:pr-64 overflow-auto w-full">
    <slot />
    <Footer class="max-w-6xl mx-auto border-t border-t-gray-cool-5" />
  </div>
</div>

<script>
  type ScrollTopJSON =
    | undefined
    | {
        scrollTop: number;
      };
  const key = "sidebar-scroll-state";
  const getSideNavEl = () => document.querySelector("#sidenav");

  document.addEventListener("astro:page-load", () => {
    const sidenav = getSideNavEl();
    if (sidenav) {
      const sidenavActiveLink = sidenav?.querySelector("[aria-current=page]");

      // Restore state from previous navigation
      const savedStateJson = sessionStorage.getItem(key);
      let savedState: ScrollTopJSON;

      if (savedStateJson) {
        try {
          savedState = JSON.parse(savedStateJson);
        } catch (e) {
          console.error("Error parsing saved position:", e);
        }
      }

      if (savedState) {
        sidenav.scrollTop = savedState.scrollTop;
      } else {
        sidenavActiveLink?.scrollIntoView({
          behavior: "instant",
          block: "center",
        });
      }
    }
  });
  document.addEventListener("astro:before-swap", () => {
    // Save user state before navigating
    const sidenav = getSideNavEl();

    if (sidenav) {
      sessionStorage.setItem(
        key,
        JSON.stringify({
          scrollTop: sidenav.scrollTop,
        }),
      );
    }
  });
</script>
