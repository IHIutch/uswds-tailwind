---
import fs from 'fs';
import { Code } from 'astro:components'
import type { CollectionEntry } from 'astro:content';
import graphPaper from '#assets/img/graph-paper.svg'
import { renderTwigTemplate } from '#utils/functions';

type Props = {
  component: CollectionEntry<"demos">['data']['component'],
  variant: CollectionEntry<"demos">['data']['variant'],
}

const { component, variant } = Astro.props

const propsPath  = `./src/__demos__/${component}/${component}-props.json`
const componentPath = `./src/__demos__/${component}/examples/${variant}.twig`

let componentProps = ""
if(fs.existsSync(propsPath)){
  componentProps = JSON.parse(fs.readFileSync(propsPath, 'utf8'))
}

const componentCode = fs.readFileSync(componentPath, 'utf-8')
const template =  await renderTwigTemplate({
  path: componentPath, 
  props: componentProps || ''
})
---

<div 
  x-data="{ exampleSize: '1056px', updateWidth(value) { this.exampleSize = value; } }" 
  class="not-usa-prose w-full max-w-[1056px] mt-6 mb-12">
  <div class="border border-gray-cool-20 rounded overflow-hidden">
    <div class="flex border-b border-b-gray-cool-20">
      <div class="text-black text-sm px-2 flex items-center justify-center w-28">
        <span class="font-semibold pr-1">Width: </span>
        <span x-text="exampleSize"></span>
      </div>
      <div class="flex gap-2 px-2 ml-auto">
        <button type="button" @click="updateWidth('352px')" class="flex items-center justify-center pt-1 size-10" :class="exampleSize === '320px' ? 'text-blue-60v border-blue-60v border-b-4' : 'text-gray-50 border-transparent border-b-4'">
          <span aria-hidden="true" class="icon-[material-symbols--phone-android] align-middle size-6"></span>
          <span class="sr-only">Display small phone layout</span>
        </button>
        <button type="button" @click="updateWidth('512px')" class="flex items-center justify-center pt-1 size-10" :class="exampleSize === '480px' ? 'text-blue-60v border-blue-60v border-b-4' : 'text-gray-50 border-transparent border-b-4'">
          <span aria-hidden="true" class="icon-[material-symbols--tablet-mac] align-middle size-6"></span>
          <span class="sr-only">Display large phone layout</span>
        </button>
        <button type="button" @click="updateWidth('672px')" class="flex items-center justify-center pt-1 size-10" :class="exampleSize === '640px' ? 'text-blue-60v border-blue-60v border-b-4' : 'text-gray-50 border-transparent border-b-4'">
          <span aria-hidden="true" class="icon-[material-symbols--tablet] align-middle size-6"></span>
          <span class="sr-only">Display tablet layout</span>
        </button>
        <button type="button" @click="updateWidth('1056px')" class="flex items-center justify-center pt-1 size-10" :class="exampleSize === '1024px' ? 'text-blue-60v border-blue-60v border-b-4' : 'text-gray-50 border-transparent border-b-4'">
          <span aria-hidden="true" class="icon-[material-symbols--desktop-mac-outline] align-middle size-6"></span>
          <span class="sr-only">Display desktop layout</span>
        </button>
      </div>
    </div>
    <div class="bg-gray-cool-4 min-w-80 z-10 relative" style={{backgroundImage: `url(${graphPaper.src})`}}>
      <div class="bg-gray-cool-2 mx-auto shadow-[-1px_0px_0px_#dfe1e2,_1px_0px_0px_#dfe1e2] p-4" :style="{ width: exampleSize }">
        <!-- Example start -->
        <Fragment set:html={template} />
        <!-- Example end -->
      </div>
    </div>
    <div x-data="{ codeHeight: 0, isCodeExpanded: false, toggleExpanded() { this.isCodeExpanded = !this.isCodeExpanded; } }" x-init="codeHeight = $refs.code.offsetHeight;">
      <div class="relative overflow-hidden">
        <div class="border-y border-y-gray-cool-20">
          <div class="flex justify-between">
            <div class="px-3 border-r border-r-gray-cool-20 flex items-center">
              <span class="text-black text-sm font-semibold">Twig</span>
            </div>
            <div>
              <button type="button" class="flex items-center justify-center h-10 px-3 border-l border-l-gray-cool-20">
                <span aria-hidden="true" class="icon-[material-symbols--file-copy] align-middle size-4"></span>
                <span class="text-sm pl-1">Copy</span>
              </button>
            </div>
          </div>
        </div>
        <div :class="codeHeight < 400 || isCodeExpanded ? 'h-auto' : 'h-96'" class="overflow-hidden" x-ref="code">
          <Code code={componentCode} lang="twig" theme="light-plus" class="p-4 text-sm" style="background-color: #f7f9fa" />
        </div>
        <button x-show="codeHeight > 400 && !isCodeExpanded" type="button" @click="toggleExpanded()" class="group flex justify-center items-end h-32 pb-3 absolute inset-x-0 bottom-0 bg-gradient-to-t from-gray-cool-2/100 from-[24px] to-gray-cool-2/0">
          <div class="flex items-center gap-2 rounded font-bold leading-none text-white px-5 py-3 bg-blue-60v group-hover:bg-blue-warm-70v group-active:bg-blue-warm-80v group-focus:outline group-focus:outline-4 group-focus:outline-offset-4 group-focus:outline-blue-40v">
            <span>Expand Code</span>
          </div>
        </button>
      </div>
    </div>
  </div>
</div>
