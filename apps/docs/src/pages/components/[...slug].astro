---
import { getCollection } from 'astro:content'
import Layout from '#layouts/base-layout.astro';
import type { GetStaticPaths, InferGetStaticPropsType } from 'astro';
import PropsTable from '#components/props-table.astro';
import ContentList from '#components/content-list.astro';
import TableOfContents from '#components/table-of-contents.astro';


export const getStaticPaths = (async () => {
  const allComponents = await getCollection('components')
  return allComponents.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }))
}) satisfies GetStaticPaths

type Props = InferGetStaticPropsType<typeof getStaticPaths>

const { entry } = Astro.props
const { Content, headings } = await entry.render()

const activeHeading = ''
const visibleHeadings = headings.filter((h) => h.depth <= 3)
---

<Layout title={entry.data.title}>
  <div class="flex w-full">
    <TableOfContents headings={visibleHeadings} />
    <div class="px-4 tablet:px-12 py-12 min-w-0 w-full">
      <div class="flex flex-col mx-auto max-w-6xl">
        <div class="mb-16">
          <h1 class="text-4xl font-bold mb-4">{entry.data.title}</h1>
          <p class="text-xl font-light max-w-prose">{entry.data.description}</p>
        </div>
        <div class="usa-prose max-w-none [&_>_*:not(.not-usa-prose)]:max-w-prose">
          <Content components={{
            PropsTable,
            ContentList
          }} />
        </div>
      </div>
    </div>
  </div>

  <script>
    import { initSplitter } from "#utils/zag/splitter";
    initSplitter()
  </script>
</Layout>
